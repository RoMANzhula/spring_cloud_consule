
1.  Terminal: docker-compose up -d

2.  Consul: http://localhost:8500
    Vault:  http://localhost:8200 - in browser input Root Token: root and click on "Sign In".

3. Create agent.json file and add to it:
    {
      "acl": {
        "enabled": true,
        "default_policy": "allow",                //("deny" - need some permissions settings)
        "enable_token_persistence": true
      }
    }

4.  Get SecretID for Consul:
    In Docker Desktop -> Terminal -> / # consul acl bootstrap
    look for token for "Log in" on http://localhost:8500/ui/dc1:
    SecretID:         e0acd0dd-7486-c01c-74b3-e70408ff1b3d

5. In Consul UI click on Key/Value -> create -> input: config/<here_app_name_from_property>,default/
        example: config/order-service,default/ (and config/product-service,default/)

6. Click on config -> order-service,default -> create pairs (and product-service,default)
    6.1. Key or folder: spring.datasource.url
         Value: jdbc:postgresql://127.0.0.1:5432/NAME_DB
    6.2. Key or folder: spring.datasource.username
         Value: YOUR_DB_USERNAME
    6.3. Key or folder: spring.datasource.password
         Value: YOUR_DB_PASSWORD

    Run our two services (product and order)

7. Security settings in Consul UI:
    7.1. Docker -> Terminal: consul acl bootstrap
            copy SecretId (for exm.: bb348ea1-6876-35b4-1c4f-974cbe95c6e7)
    7.2. next command in terminal: export CONSUL_HTTP_TOKEN=bb348ea1-6876-35b4-1c4f-974cbe95c6e7

    7.3. Go to http://localhost:8500 and input our SecretId(token)
    7.4. Go to http://localhost:8500/ui/dc1/acls/policies
        7.4.1. Add policies key/value for order-service:
                Name: order-service-kv
                Rules: key_prefix "config/order-service" {
                            policy = "read"
                       }
        7.4.2. Add policies key/value for product-service:
                Name: product-service-kv
                Rules: key_prefix "config/product-service" {
                           policy = "read"
                      }
    7.5. Go to http://localhost:8500/ui/dc1/acls/tokens
        7.5.1. Add token for order-service
                Click on "Restrict this token to a local datacenter"
                Description: Token for order-service
                Policies: choose our service "order-service-kv"
                Click on "+ Create New Policy" over Policies row
                Click on "Service Identity"
                Name (input name of our service): order-service
                Click on "Create and apply"
                Click on "Save"
        7.5.2. Add token for product-service
                Click on "Restrict this token to a local datacenter"
                Description: Token for product-service
                Policies: choose our service "product-service-kv"
                Click on "+ Create New Policy" over Policies row
                Click on "Service Identity"
                Name (input name of our service): product-service
                Click on "Create and apply"
                Click on "Save"

8. Testing our endpoints:
    8.1. Consul -> Services -> Click on order-service -> again click on order-service
         get endpoint like this: http://host.docker.internal:60344/
         and add our mapping endpoint: api/order-service/orders
         total url http://host.docker.internal:60344/api/order-service/orders
    8.2. Consul -> Services -> Click on product-service -> again click on product-service
         get endpoint like this: http://host.docker.internal:51723/
         and add our mapping endpoint: api/product-service/products
         total url http://host.docker.internal:51723/api/product-service/products